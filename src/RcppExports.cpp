// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// MMatrixAccess
Rcpp::NumericVector MMatrixAccess(SEXP pM, std::string datatype, Rcpp::List L);
RcppExport SEXP _MarsuMatrix_MMatrixAccess(SEXP pMSEXP, SEXP datatypeSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(MMatrixAccess(pM, datatype, L));
    return rcpp_result_gen;
END_RCPP
}
// MMatrixToRMatrix
SEXP MMatrixToRMatrix(SEXP pM, std::string datatype);
RcppExport SEXP _MarsuMatrix_MMatrixToRMatrix(SEXP pMSEXP, SEXP datatypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    rcpp_result_gen = Rcpp::wrap(MMatrixToRMatrix(pM, datatype));
    return rcpp_result_gen;
END_RCPP
}
// extract_mmatrix_to_R
void extract_mmatrix_to_R(SEXP pM, std::string datatype, Rcpp::IntegerVector I, Rcpp::IntegerVector J, SEXP target);
RcppExport SEXP _MarsuMatrix_extract_mmatrix_to_R(SEXP pMSEXP, SEXP datatypeSEXP, SEXP ISEXP, SEXP JSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type J(JSEXP);
    Rcpp::traits::input_parameter< SEXP >::type target(targetSEXP);
    extract_mmatrix_to_R(pM, datatype, I, J, target);
    return R_NilValue;
END_RCPP
}
// extract_mmatrix_to_mmatrix
void extract_mmatrix_to_mmatrix(SEXP pM, std::string datatype, Rcpp::IntegerVector I, Rcpp::IntegerVector J, SEXP target);
RcppExport SEXP _MarsuMatrix_extract_mmatrix_to_mmatrix(SEXP pMSEXP, SEXP datatypeSEXP, SEXP ISEXP, SEXP JSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type J(JSEXP);
    Rcpp::traits::input_parameter< SEXP >::type target(targetSEXP);
    extract_mmatrix_to_mmatrix(pM, datatype, I, J, target);
    return R_NilValue;
END_RCPP
}
// extract_mvector_to_R
void extract_mvector_to_R(SEXP pM, std::string datatype, Rcpp::IntegerVector I, SEXP target);
RcppExport SEXP _MarsuMatrix_extract_mvector_to_R(SEXP pMSEXP, SEXP datatypeSEXP, SEXP ISEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< SEXP >::type target(targetSEXP);
    extract_mvector_to_R(pM, datatype, I, target);
    return R_NilValue;
END_RCPP
}
// extract_mvector_to_mvector
void extract_mvector_to_mvector(SEXP pM, std::string datatype, Rcpp::IntegerVector I, SEXP target);
RcppExport SEXP _MarsuMatrix_extract_mvector_to_mvector(SEXP pMSEXP, SEXP datatypeSEXP, SEXP ISEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< SEXP >::type target(targetSEXP);
    extract_mvector_to_mvector(pM, datatype, I, target);
    return R_NilValue;
END_RCPP
}
// isnullptr
bool isnullptr(SEXP pointer);
RcppExport SEXP _MarsuMatrix_isnullptr(SEXP pointerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pointer(pointerSEXP);
    rcpp_result_gen = Rcpp::wrap(isnullptr(pointer));
    return rcpp_result_gen;
END_RCPP
}
// link_mmatrix
SEXP link_mmatrix(std::string datatype, std::string file, size_t nrow, size_t ncol);
RcppExport SEXP _MarsuMatrix_link_mmatrix(SEXP datatypeSEXP, SEXP fileSEXP, SEXP nrowSEXP, SEXP ncolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< size_t >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< size_t >::type ncol(ncolSEXP);
    rcpp_result_gen = Rcpp::wrap(link_mmatrix(datatype, file, nrow, ncol));
    return rcpp_result_gen;
END_RCPP
}
// set_values_mmatrix
void set_values_mmatrix(SEXP pM, std::string datatype, Rcpp::IntegerVector I, Rcpp::IntegerVector J, SEXP values);
RcppExport SEXP _MarsuMatrix_set_values_mmatrix(SEXP pMSEXP, SEXP datatypeSEXP, SEXP ISEXP, SEXP JSEXP, SEXP valuesSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type pM(pMSEXP);
    Rcpp::traits::input_parameter< std::string >::type datatype(datatypeSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type I(ISEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type J(JSEXP);
    Rcpp::traits::input_parameter< SEXP >::type values(valuesSEXP);
    set_values_mmatrix(pM, datatype, I, J, values);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MarsuMatrix_MMatrixAccess", (DL_FUNC) &_MarsuMatrix_MMatrixAccess, 3},
    {"_MarsuMatrix_MMatrixToRMatrix", (DL_FUNC) &_MarsuMatrix_MMatrixToRMatrix, 2},
    {"_MarsuMatrix_extract_mmatrix_to_R", (DL_FUNC) &_MarsuMatrix_extract_mmatrix_to_R, 5},
    {"_MarsuMatrix_extract_mmatrix_to_mmatrix", (DL_FUNC) &_MarsuMatrix_extract_mmatrix_to_mmatrix, 5},
    {"_MarsuMatrix_extract_mvector_to_R", (DL_FUNC) &_MarsuMatrix_extract_mvector_to_R, 4},
    {"_MarsuMatrix_extract_mvector_to_mvector", (DL_FUNC) &_MarsuMatrix_extract_mvector_to_mvector, 4},
    {"_MarsuMatrix_isnullptr", (DL_FUNC) &_MarsuMatrix_isnullptr, 1},
    {"_MarsuMatrix_link_mmatrix", (DL_FUNC) &_MarsuMatrix_link_mmatrix, 4},
    {"_MarsuMatrix_set_values_mmatrix", (DL_FUNC) &_MarsuMatrix_set_values_mmatrix, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_MarsuMatrix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
